#+PROPERTY: header-args:clojure :exports both
#+PROPERTY: header-args:clojure+ :results silent
#+PROPERTY: header-args:clojure+ :session lumen
#+PROPERTY: header-args:clojure+ :padline yes
#+PROPERTY: header-args:clojure+ :mkdirp yes
#+PROPERTY: header-args:clojure+ :tangle ../src/akvo/lumen/specs/config.clj

* specs.config

#+BEGIN_SRC clojure
(ns akvo.lumen.specs.config
      (:require [clojure.spec.alpha :as s]
		[akvo.lumen.specs.core :as lumen.s]
                [akvo.lumen.specs.db :as db.s]))
   (s/def ::db-uri ::db.s/uri)

   (s/def ::db (s/keys :req-un [::db-uri]))

   (s/def ::config
     (s/keys :req-un [::db]))

#+END_SRC


*conforming specs*...

#+BEGIN_SRC clojure :tangle no :results value replace

(s/conform ::config {:db {:db-uri "jdbc:postgresql://postgres/lumen?user=lumen&password=password"}})

#+END_SRC

#+RESULTS:
| :db | (:db-uri jdbc:postgresql://postgres/lumen?user=lumen&password=password) |
